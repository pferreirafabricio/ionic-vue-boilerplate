{"version":3,"file":"js/647.977ad2c6.js","mappings":"0KAEe,SAAS,IAStBA,eAAeC,EAAUC,EAASC,EAAOC,EAAW,MAAOC,EAAW,KACpE,MAAMC,QAAcC,EAAAA,GAAgBC,OAAO,CACzCN,UACAE,WACAD,QACAE,aAGF,OAAOC,EAAMG,SACf,CAEA,MAAO,CACLR,YAEJ,C,kpBC4EM,KAAES,EAAI,QAAEC,EAAO,OAAEC,EAAM,GAAEC,IAAOC,EAAAA,EAAAA,IAAOC,GAEvCC,GAAUC,EAAAA,EAAAA,KAAS,IAChBP,EAAKQ,OAASP,EAAQO,OAASN,EAAOM,QAGzCC,GAASC,EAAAA,EAAAA,MAEf,SAASC,IACFR,EAAGK,OAERC,EAAOG,KAAKT,EAAGK,MACjB,C,27BC3GA,MAAMK,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O,idCLA,MAAMA,EAAc,EAEpB,O,mMCuCA,MAAMC,GAAYC,EAAAA,EAAAA,MAEZ,UAAExB,IAAcyB,EAAAA,EAAAA,KAEhBC,GAAQC,EAAAA,EAAAA,IAAI,IACZC,GAAUD,EAAAA,EAAAA,KAAI,GACdE,GAAUF,EAAAA,EAAAA,KAAI,GAEdG,GAASH,EAAAA,EAAAA,IAAI,CACjBD,MAAO,KAGT,SAASK,IACFL,EAAMT,OAKXY,EAAQZ,OAAQ,EAEhBM,EACGS,0BAA0BN,EAAMT,OAChCgB,MAAK,KACJjC,EAAU,qBAAsB,WAEhC4B,EAAQX,OAAQ,CAAI,IAErBiB,OAAM,KACLlC,EACE,gDACA,SACD,IAEFmC,SAAQ,KACPN,EAAQZ,OAAQ,CAAK,KApBvBa,EAAOb,MAAMS,MAAQ,gBAsBzB,C,85BC7EA,MAAMJ,EAAc,EAEpB,O","sources":["webpack://app-boilerplate/./src/composition/useToast.js","webpack://app-boilerplate/./src/components/Button.vue","webpack://app-boilerplate/./src/components/Button.vue?4e0d","webpack://app-boilerplate/./src/components/NoContent.vue","webpack://app-boilerplate/./src/pages/RecoveryPassword.vue","webpack://app-boilerplate/./src/pages/RecoveryPassword.vue?17e3"],"sourcesContent":["import { toastController } from \"@ionic/vue\";\n\nexport default function () {\n  /**\n   * Shows a notification\n   * @param {string} message\n   * @param {string} color\n   * @param {string} position\n   * @param {number} duration\n   * @returns\n   */\n  async function openToast(message, color, position = \"top\", duration = 3000) {\n    const toast = await toastController.create({\n      message,\n      position,\n      color,\n      duration,\n    });\n\n    return toast.present();\n  }\n\n  return {\n    openToast,\n  };\n}\n","<template>\n  <ion-button\n    class=\"btn ion-activatable ripple-parent\"\n    :color=\"color\"\n    :expand=\"expand\"\n    :size=\"size\"\n    :disabled=\"isLoading\"\n    :fill=\"fill\"\n    :download=\"download\"\n    :href=\"href\"\n    @click=\"!!to && redirectToRoute()\"\n  >\n    <ion-label v-if=\"text && !iconOnly\" :class=\"[hasIcon ? 'ml-2' : '']\">{{\n      text\n    }}</ion-label>\n    <ion-icon\n      v-if=\"hasIcon\"\n      :slot=\"iconOnly ? 'icon-only' : 'start'\"\n      :ios=\"iosIcon || icon\"\n      :md=\"mdIcon || icon\"\n    ></ion-icon>\n    <ion-spinner\n      v-if=\"isLoading\"\n      slot=\"end\"\n      :class=\"iconOnly ? '' : 'ion-margin-start'\"\n      :name=\"spinnerName\"\n    ></ion-spinner>\n    <ion-ripple-effect type=\"unbounded\"></ion-ripple-effect>\n  </ion-button>\n</template>\n\n<script setup>\nimport {\n  IonButton,\n  IonLabel,\n  IonIcon,\n  IonSpinner,\n  IonRippleEffect,\n} from \"@ionic/vue\";\nimport { defineProps, computed, toRefs } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\nconst props = defineProps({\n  color: {\n    type: String,\n    default: \"primary\",\n  },\n  text: {\n    type: String,\n    required: false,\n  },\n  expand: {\n    type: String,\n    default: \"block\",\n  },\n  size: {\n    type: String,\n    default: \"medium\",\n  },\n  icon: {\n    default: null,\n    required: false,\n  },\n  iosIcon: {\n    default: null,\n    required: false,\n  },\n  mdIcon: {\n    default: null,\n    required: false,\n  },\n  isLoading: {\n    type: Boolean,\n    default: false,\n  },\n  spinnerName: {\n    type: String,\n    default: \"crescent\",\n  },\n  iconOnly: {\n    type: Boolean,\n    default: false,\n  },\n  fill: {\n    type: String,\n    default: \"solid\",\n  },\n  to: {\n    type: [String, Object],\n    required: false,\n  },\n  download: {\n    type: Boolean,\n    default: false,\n  },\n  href: {\n    type: String,\n    required: false,\n  },\n});\n\nconst { icon, iosIcon, mdIcon, to } = toRefs(props);\n\nconst hasIcon = computed(() => {\n  return icon.value || iosIcon.value || mdIcon.value;\n});\n\nconst router = useRouter();\n\nfunction redirectToRoute() {\n  if (!to.value) return;\n\n  router.push(to.value);\n}\n</script>\n\n<style scoped>\n.btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n</style>\n","import script from \"./Button.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Button.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Button.vue?vue&type=style&index=0&id=91873b5e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-91873b5e\"]])\n\nexport default __exports__","import script from \"./NoContent.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./NoContent.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <base-layout\n    page-default-back-link=\"/login\"\n    page-title=\"Recovery password\"\n    :show-menu-button=\"false\"\n  >\n    <div v-if=\"!wasSent\">\n      <ion-item>\n        <ion-input\n          v-model=\"email\"\n          required\n          clear-input\n          label=\"E-mail\"\n          label-placement=\"floating\"\n          type=\"email\"\n          @input=\"Errors.email = ''\"\n        ></ion-input>\n      </ion-item>\n      <error-message :text=\"Errors.email\" />\n      <Button\n        class=\"ion-margin-top\"\n        text=\"Recover\"\n        :is-loading=\"loading\"\n        @click=\"sendRecoveryEmail()\"\n      />\n    </div>\n    <NoContent\n      v-else\n      image=\"assets/vectors/email-sent.svg\"\n      :text=\"`A password recovery email has just been sent to the address <b>${email}</b> &#x1F609;`\"\n    />\n  </base-layout>\n</template>\n\n<script setup>\nimport { IonInput, IonItem } from \"@ionic/vue\";\nimport { ref } from \"vue\";\n\nimport useToast from \"@/composition/useToast\";\n\nimport Button from \"../components/Button.vue\";\nimport NoContent from \"../components/NoContent.vue\";\nimport { useUserStore } from \"../store/user\";\n\nconst userStore = useUserStore();\n\nconst { openToast } = useToast();\n\nconst email = ref(\"\");\nconst wasSent = ref(false);\nconst loading = ref(false);\n\nconst Errors = ref({\n  email: \"\",\n});\n\nfunction sendRecoveryEmail() {\n  if (!email.value) {\n    Errors.value.email = \"Invalid e-mail\";\n    return;\n  }\n\n  loading.value = true;\n\n  userStore\n    .sendRecoveryPasswordEmail(email.value)\n    .then(() => {\n      openToast(\"Recover email sent\", \"success\");\n\n      wasSent.value = true;\n    })\n    .catch(() => {\n      openToast(\n        \"Something was wrong to send the recover email\",\n        \"danger\",\n      );\n    })\n    .finally(() => {\n      loading.value = false;\n    });\n}\n</script>\n","import script from \"./RecoveryPassword.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RecoveryPassword.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["async","openToast","message","color","position","duration","toast","toastController","create","present","icon","iosIcon","mdIcon","to","toRefs","props","hasIcon","computed","value","router","useRouter","redirectToRoute","push","__exports__","userStore","useUserStore","useToast","email","ref","wasSent","loading","Errors","sendRecoveryEmail","sendRecoveryPasswordEmail","then","catch","finally"],"sourceRoot":""}